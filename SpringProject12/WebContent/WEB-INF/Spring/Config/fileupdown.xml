<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--  
	스프링 프레임 워크에서 파일 업로드를 위한 API
    id는 반드시 multipartResolver로 지정
      왜냐하면 파일업로드와 관련된 스프링의 다른 클래스들이
    multipartResolver란 이름으로 참조하여 사용함으로......
  	-->
  	<!-- 최대 업로드 용량 사이즈 설정:maxUploadSize속성(바이트)
        -1:무제한        
    -->
    <!-- 용량 초과시
      org.springframework.web.multipart.MaxUploadSizeExceededException
        예외 발생
    -->	
    <bean p:maxUploadSize="1048576" id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    <!-- 업로드 요청을 처리할 빈 등록 -->
    <bean class="controller.fileupdown.UploadController"/>
    <!-- 다운로드 요청을 처리할 빈 등록 -->
    <bean class="controller.fileupdown.DownloadController"/>
    <!-- 스프링에서 제공하는 API 사용해서 다운로드 구현시
	      아래 빈 등록과정 반드시 필요
	      단,스프링에서 제공하는 API 미 사용시에는 불필요
	 -->
	 <!-- 1]InternalResourceViewResolver
	         빈 등록 
	       -다른 ViewResolver사용시 더 이상 제공해주지 않음
	       -View객체로 InternalResourceView객체사용
	        InternalResourceView객체는 JSP페이지를
	             뷰로 사용 즉 JSP페이지로 매핑하는 리졸버
	 -->
     <bean p:order="2" class="org.springframework.web.servlet.view.InternalResourceViewResolver"/>
      <!-- 
	 2]org.springframework.web.servlet.view.BeanNameViewResolver
	  등록
	  -View객체로 JSP가 아닌 View타입의 객체를 매핑하는 리졸버
	  -이 뷰리졸버를 기본 뷰리졸버보다 우선 순위가 높게 설정	  
	 -->
	 <bean p:order="1" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
	  <!-- 
	 3]실제 다운로드를 처리하는 View타입의 클래스를 빈 으로 등록
	  - View계열 인터페이스 나 클래스를 상속받아서 구현	
      - 빈 등록시 반드시 id값 부여.
         다운로드 요청을 처리하는 다운로드 컨트롤러에서
         반환시 id에 지정한 이름 지정
         예]id값이 id="downView"이면
        return "downView";
         즉 id에 지정한 이름을 컨틀로러 클래스에서 
         리턴함.
	  -->
	  <bean id="downloadview" class="controller.fileupdown.DownLoadView"/>
</beans>
