<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 공통 관점(코드,작업)을 위빙(주입)할 대상 클래스 빈 등록 -->
	<bean p:start="1" p:end="100000000" id="targetObject"  class="controller.aop.TargetObject"/>
	<!-- XML설정으로 AOP구현시 Advice로 사용할 빈 등록] 
	     -반드시 id값 부여	-->
	<bean id="adviceUsingXml" class="controller.aop.AdviceUsingXML"/>
	<!-- XML로 AOP설정하는 부분 -->
	<!--  
	<aop:config>
		 aspect태그로 어떤 클래스를 Advice로 사용할 것인지 설정 
		<aop:aspect id="aspect" ref="adviceUsingXml"> Advice지정 
			
			   pointcut을 controller.aop 패키지 및 하위 패지지의 
			   모든 public메서드 그리고 인자가 0개인상인 메서드에 적용
			   execution명시자:Advice를 적용할 패키지,클래스 그리고 메서드를 표현할때 사용
			   형식:execution(접근지정자패턴 리턴타입패턴 패키지이름패턴/메서드이름패턴/(파라미터 패턴)) =>AspectJ표현식이라고 함
			  
			   수식어 패턴:생략가능(public ,protected등)
			   *:모든 값
			   ..:0개 이상이라는 의미
			   public * spring.aop.. *(..)=>접근지정자가 public이고 모든 리턴타입에 대해 spring.aop패키지 및 그 이하에 있는 모든 패키지의
			    모든 메서드에 대해 그리고 인자가 0개이상인 모든 메서드를 의미함.
			
	   		
	   		pointcut태그로 삽입지점 설정
	   		
			<aop:pointcut expression="execution(public * controller.aop..*(..))" id="publicmethod"/>
			
			around태그로 Around-Advice지정 및
	   		method속성에는 Advice로 만든 클래스의 메소드명
	   		Advice의 cross_cutting_concern메서드를 Around Advice로 지정
	   		pointcut-ref에는   pointcut태그에 설정한 id값 지정   
			
			<aop:around method="cross_cutting_concern" pointcut-ref="publicmethod"/>
		</aop:aspect>	
	</aop:config>
	-->
	<!-- 어노테이션으로 AOP구현시 아래 태그 추가 -->
	<aop:aspectj-autoproxy/>
	<!-- 어노테이션으로 AOP구현시 Advice로 사용할 빈 등록 -->
	<bean id="adviceUsingAnnotation" class="controller.aop.AdviceUsingAnnotation"/>
	<!-- AOP테스트를 위한 사용자 요청 처리용 빈 등록  -->
	<bean class="controller.aop.AOPController"/>
</beans>
