<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 
		각 디스패처 서블릿에 의해 생성된
		WebApplicationContext영역에서 공통으로 사용할 빈 등록
	 -->
	<!-- Spring JDBC API사용 -->
	<!-- 데이타베이스 연결이 필요한 클래스에 DataSource를 주입하기 위한 bean등록 -->	
	<!-- server.xml에 등록한 JNDI명으로 DataSource를
		 얻기 위한 설정은 의미 없다.
		-즉 <GlobalNamingResources>와
		    <ResourceLinK>태그에 등록한
		    설정은 의미 없다.
	 --> 	
	<!--  DataSource using Spring JDBC -->	
	<bean id="datasourceByJDBC" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:oracle:thin://localhost:1521:orcl"/>
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="username" value="SPRING"/>
		<property name="password" value="SPRING"/>
	</bean>
	<!-- 스프링의 JNDI사용(커넥션 풀 사용) -->  	
	<!--  DataSource using Spring JNDI -->
	<bean id="datasourceByJNDI" class="org.springframework.jndi.JndiObjectFactoryBean">
		<!-- 
        value속성:server.xml이나 context.xml의 <Context>태그 안의
        <ResourceLink global="" name="" type="">태그의
        name속성에 지정한 이름
         -->  
		<property name="jndiName" value="jdbc/spring"/>
		<!-- 
     	아래 속성(resourceRef)을 사용하지 않은 경우
         (디폴트 false)
             위의 jndiName속성의 값으로
             해당 WAS서버의 루트 디렉토리까지 적어줘야 한다
             예]java:/comp/env/jdbc/spring  
     	-->  
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean>
	<!-- [ ibatis의 SqlMapClient주입을 위한 빈 등록 ]-->
	<!--  SqlMapClient 객체를 얻기 -->
	<!-- iBatis의 SqlMapClient객체를
         DAO계열 클래스에 주입하기 위한 빈 등록
               이때는 SqlMapConfig.xml파일에 
               매퍼파일 위치 정보만 설정해도 됨.
    -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="datasourceByJNDI"/>
		<property name="configLocation" value="classpath:ibatis/SqlMapConfig.xml"/>
	</bean>
	<!-- SqlMapClientTemplate객체 얻기-->
    <!-- SqlMapClientTemplate API사용을 위한 빈 등록 
     	 -SqlMapClient API사용시 try~catch 처리를 해야함.
                 그러나 try~catch를 내부적으로 미리 처리해서
          try~catch를 할 필요 없도록 템플릿화 해놓은 클래스
         -내부적으로 SqlMapClient클래스를 사용함.  
     -->
     <bean id="ibatisTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
     	<property name="sqlMapClient" ref="sqlMapClient"/>
     </bean>
     <!-- 마이바티스 지원을 위한 빈 등록 -->    
     <!--  1]SqlSessionFactory -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<!-- 데이타소스:데이타베이스 연결정보 -->
     	<property name="dataSource" ref="datasourceByJNDI"/>
		<!-- 환경설정 파일 위치 설정 -->
		<property name="configLocation" value="classpath:mybatis/Configuration.xml"/>
     </bean>
     <!-- 2]SqlSessionTemplate -->
     <bean id="template"  class="org.mybatis.spring.SqlSessionTemplate">
     	<constructor-arg ref="sqlSessionFactory"/>
     </bean>
</beans>
